{"version":3,"sources":["components/CoinSummary.js","components/Holdings.js","components/Transactions.js","App.js","index.js"],"names":["CoinSummary","coin","className","name","amount","cost","toFixed","totalCost","realizedGains","Holdings","coins","map","index","Transactions","changeCoin","useState","selectedCoin","setSelectedCoin","selectedTransType","setSelectedTransType","geckoCoins","setGeckoCoins","amountOfCoins","setAmountOfCoins","costOfCoins","setCostOfCoins","submitButton","useRef","useEffect","fetch","then","response","json","data","value","id","label","options","onChange","trans","type","event","target","placeholder","ref","onClick","current","blur","console","log","App","setCoins","saved","JSON","parse","localStorage","getItem","setItem","stringify","coin_id","editCoin","parseFloat","findIndex","alert","newCoinList","push","sort","a","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.754a7ce9.chunk.js","sourcesContent":["const CoinSummary = ({ coin }) => {\r\n  return (\r\n    <div className='flex items-center h-16 text-center divide-solid divide-gray-400 divide-x-2 justify-between p-4 my-2 w-full shadow-sm border-gray-300 border rounded'>\r\n      <h2 className='w-1/5 text-lg font-semibold text-blue-600 overflow-x-hidden'>{coin.name}</h2>\r\n      <h2 className='w-1/5 text-lg font-semibold overflow-x-hidden'>{coin.amount} coins</h2>\r\n      <h2 className='w-1/5 text-lg font-semibold overflow-x-hidden'>${coin.cost.toFixed(2)}</h2>\r\n      <h2 className='w-1/5 text-lg font-semibold overflow-x-hidden'>${coin.totalCost.toFixed(2)}</h2>\r\n      <h2 className='w-1/5 text-lg font-semibold overflow-x-hidden'>${coin.realizedGains.toFixed(2)}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinSummary\r\n","import CoinSummary from './CoinSummary'\n\nconst Holdings = ({ coins }) => {\n  return (\n    <div className='xl:h-full h-1/2 w-full xl:w-1/2 p-4 flex-col align-center gap-6 bg-white rounded-xl shadow-xl'>\n      <h2 className='text-2xl text-center font-bold my-6'>Holdings</h2>\n      <div className='flex justify-evenly text-center gap-1 my-4'>\n        <h2 className='text-xl w-1/5 font-sans font-semi-bold text-gray-700'>Coin Name:</h2>\n        <h2 className='text-xl w-1/5 font-sans font-semi-bold text-gray-700'>Amount of Coins:</h2>\n        <h2 className='text-xl w-1/5 font-sans font-semi-bold text-gray-700'>Average Cost:</h2>\n        <h2 className='text-xl w-1/5 font-sans font-semi-bold text-gray-700'>Total Cost:</h2>\n        <h2 className='text-xl w-1/5 font-sans font-semi-bold text-gray-700'>Realized Gains:</h2>\n      </div>\n      <div className='overflow-auto mb-2 px-2'>\n        {coins &&\n          coins.map((coin, index) => {\n            return <CoinSummary key={index} coin={coin} />\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default Holdings\n","import { useState, useEffect, useRef } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Transactions = ({ changeCoin }) => {\r\n  const [selectedCoin, setSelectedCoin] = useState()\r\n  const [selectedTransType, setSelectedTransType] = useState()\r\n  const [geckoCoins, setGeckoCoins] = useState()\r\n  const [amountOfCoins, setAmountOfCoins] = useState('')\r\n  const [costOfCoins, setCostOfCoins] = useState('')\r\n\r\n  const submitButton = useRef()\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false'\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setGeckoCoins(\r\n          data.map((coin) => {\r\n            return { value: coin.id, label: coin.name }\r\n          })\r\n        )\r\n      })\r\n  }, [])\r\n\r\n  const handleChooseCoin = (coin) => {\r\n    setSelectedCoin(coin.label)\r\n  }\r\n\r\n  const handleChooseTransType = (trans) => {\r\n    setSelectedTransType(trans.value)\r\n  }\r\n\r\n  const handleAmountOfCoins = (event) => {\r\n    setAmountOfCoins(event.target.value)\r\n  }\r\n\r\n  const handleCostOfCoins = (event) => {\r\n    setCostOfCoins(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    submitButton.current.blur()\r\n    if (selectedCoin && selectedTransType && amountOfCoins && costOfCoins) {\r\n      console.log(selectedCoin + ' ' + selectedTransType + ' ' + amountOfCoins + ' ' + costOfCoins)\r\n      changeCoin(selectedCoin, selectedTransType, amountOfCoins, costOfCoins)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='h-1/2 xl:h-full p-4 w-full xl:w-1/2 bg-white rounded-xl shadow-xl flex flex-col align-center'>\r\n      <h2 className='text-2xl text-center font-bold mt-4'>Transactions</h2>\r\n      <h4 className='form-label'>Select a Coin:</h4>\r\n      <Select options={geckoCoins} onChange={handleChooseCoin} className='shadow-sm' />\r\n      <h4 className='form-label'>Was this a buy or a sell?:</h4>\r\n      <Select\r\n        options={[\r\n          { value: 'buy', label: 'Buy' },\r\n          { value: 'sell', label: 'Sell' },\r\n        ]}\r\n        onChange={handleChooseTransType}\r\n        className='shadow-sm'\r\n      />\r\n      <h4 className='form-label'>How many coins did you transact?</h4>\r\n      <input\r\n        type='number'\r\n        className='number-input'\r\n        value={amountOfCoins}\r\n        onChange={handleAmountOfCoins}\r\n        placeholder='Amount'\r\n      />\r\n      <h4 className='form-label'>Cost of each coin?</h4>\r\n      <input\r\n        type='number'\r\n        className='number-input'\r\n        value={costOfCoins}\r\n        onChange={handleCostOfCoins}\r\n        placeholder='Cost $'\r\n      />\r\n      <button ref={submitButton} onClick={handleSubmit} className='btn-blue'>\r\n        <p className='text-white'>Submit</p>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import Holdings from './components/Holdings'\nimport Transactions from './components/Transactions'\nimport React, { useState, useEffect } from 'react'\n\nconst App = () => {\n  const [coins, setCoins] = useState()\n\n  useEffect(() => {\n    let saved = JSON.parse(localStorage.getItem('coins'))\n    if (saved == null) {\n      localStorage.setItem('coins', JSON.stringify([]))\n      setCoins([])\n    } else {\n      setCoins(saved)\n    }\n  }, [])\n\n  const changeCoin = (coin_id, trans, amount, cost) => {\n    let editCoin = {}\n\n    amount = parseFloat(amount)\n    cost = parseFloat(cost)\n\n    let index = coins.findIndex((coin) => {\n      if (coin.name === coin_id) {\n        return true\n      } else {\n        return false\n      }\n    })\n\n    if (trans === 'buy') {\n      if (index === -1) {\n        editCoin.name = coin_id\n        editCoin.cost = cost\n        editCoin.amount = amount\n        editCoin.totalCost = cost * amount\n        editCoin.realizedGains = 0\n      } else {\n        editCoin = coins[index]\n        editCoin.totalCost = editCoin.totalCost + cost * amount\n        editCoin.amount = editCoin.amount + amount\n        editCoin.cost = editCoin.totalCost / editCoin.amount\n      }\n    } else if (trans === 'sell') {\n      if (index === -1) {\n        alert('Tried selling with no coins in list, Try again!')\n        return\n      } else {\n        editCoin = coins[index]\n        if (editCoin.amount - amount >= 0) {\n          editCoin.amount = editCoin.amount - amount\n          editCoin.realizedGains = editCoin.realizedGains + (amount * cost - amount * editCoin.cost)\n          if (editCoin.amount === 0) {\n            editCoin.totalCost = 0\n            editCoin.cost = 0\n          }\n        } else {\n          alert('You tried selling more coins than you have recorded! Try again!')\n          return\n        }\n      }\n    }\n\n    let newCoinList = coins\n\n    if (index !== -1) {\n      newCoinList[index] = editCoin\n    } else {\n      newCoinList.push(editCoin)\n    }\n\n    newCoinList = newCoinList.sort((a, b) => {\n      return b.totalCost - a.totalCost\n    })\n\n    setCoins([...newCoinList])\n    localStorage.setItem('coins', JSON.stringify(newCoinList))\n  }\n\n  return (\n    <div className='w-full h-full xl:h-screen bg-gray-100'>\n      <div className='container mx-auto py-6 sm:py-12 h-full'>\n        <div className='h-full px-4 flex flex-col xl:flex-row gap-4 justify-evenly'>\n          <Holdings coins={coins} />\n          <Transactions changeCoin={changeCoin} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}