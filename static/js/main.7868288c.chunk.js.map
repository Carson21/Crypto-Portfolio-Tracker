{"version":3,"sources":["components/CoinSummary.js","components/Holdings.js","components/Chart.js","components/Overview.js","components/Transactions.js","App.js","index.js"],"names":["CoinSummary","coin","className","str","split","map","word","charAt","toUpperCase","slice","join","capatilize","id","amount","totalCost","realizedGains","Holdings","coins","index","Chart","Overview","Transactions","changeCoin","useState","selectedCoin","setSelectedCoin","selectedTransType","setSelectedTransType","geckoCoins","setGeckoCoins","amountOfCoins","setAmountOfCoins","costOfCoins","setCostOfCoins","submitButton","useRef","useEffect","fetch","then","response","json","data","value","symbol","label","options","onChange","trans","type","event","target","placeholder","ref","onClick","current","blur","console","log","App","setCoins","saved","JSON","parse","localStorage","getItem","setItem","stringify","coin_id","cost","editCoin","parseFloat","findIndex","alert","newCoinList","push","sort","a","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7868288c.chunk.js","sourcesContent":["const CoinSummary = ({ coin }) => {\r\n  const capatilize = (str) => {\r\n    let split = str.split('-')\r\n    split = split.map((word) => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1)\r\n    })\r\n    return split.join(' ')\r\n  }\r\n\r\n  return (\r\n    <div className='flex items-center text-center justify-between p-4 my-2 w-full h-16 shadow-sm border-gray-300 border rounded'>\r\n      <h2 className='w-1/4 text-lg font-semibold text-blue-600'>{capatilize(coin.id)}</h2>\r\n      <h2 className='w-1/4 text-lg font-semibold'>{coin.amount} coins</h2>\r\n      <h2 className='w-1/4 text-lg font-semibold'>${coin.totalCost}</h2>\r\n      <h2 className='w-1/4 text-lg font-semibold'>${coin.realizedGains}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinSummary\r\n","import CoinSummary from './CoinSummary'\n\nconst Holdings = ({ coins }) => {\n  return (\n    <div className='h-full p-4 flex flex-col justify-evenly gap-6'>\n      <h2 className='text-2xl text-center font-bold mt-2'>Holdings</h2>\n      <div className='flex justify-evenly'>\n        <h2 className='text-xl font-sans font-semi-bold text-gray-700'>Coin Name:</h2>\n        <h2 className='text-xl font-sans font-semi-bold text-gray-700'>Amount of Coins:</h2>\n        <h2 className='text-xl font-sans font-semi-bold text-gray-700'>Total Cost:</h2>\n        <h2 className='text-xl font-sans font-semi-bold text-gray-700'>Realized Gains:</h2>\n      </div>\n      <div className='overflow-auto mb-2 px-2'>\n        {coins &&\n          coins.map((coin, index) => {\n            return <CoinSummary key={index} coin={coin} />\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default Holdings\n","const Chart = () => {\n  return (\n    <div className='p-4'>\n      <h2 className='text-2xl text-center font-bold mt-4'>Chart</h2>\n    </div>\n  )\n}\n\nexport default Chart\n","import Holdings from './Holdings'\nimport Chart from './Chart'\n\nconst Overview = ({ coins }) => {\n  return (\n    <div className='flex flex-col col-span-1 row-span-2 sm:row-span-1 sm:col-span-2'>\n      <div className='h-3/5 bg-white w-full rounded-xl shadow-xl mb-2'>\n        <Chart coins={coins} />\n      </div>\n      <div className='h-2/5 bg-white w-full rounded-xl shadow-xl mt-2'>\n        <Holdings coins={coins} />\n      </div>\n    </div>\n  )\n}\n\nexport default Overview\n","import { useState, useEffect, useRef } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst Transactions = ({ changeCoin }) => {\r\n  const [selectedCoin, setSelectedCoin] = useState()\r\n  const [selectedTransType, setSelectedTransType] = useState()\r\n  const [geckoCoins, setGeckoCoins] = useState()\r\n  const [amountOfCoins, setAmountOfCoins] = useState('')\r\n  const [costOfCoins, setCostOfCoins] = useState('')\r\n\r\n  const submitButton = useRef()\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false'\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setGeckoCoins(\r\n          data.map((coin) => {\r\n            return { value: coin.symbol, label: coin.id }\r\n          })\r\n        )\r\n      })\r\n  }, [])\r\n\r\n  // const capatilize = (str) => {\r\n  //   let split = str.split('-')\r\n  //   split = split.map((word) => {\r\n  //     return word.charAt(0).toUpperCase() + word.slice(1)\r\n  //   })\r\n  //   return split.join(' ')\r\n  // }\r\n\r\n  const handleChooseCoin = (coin) => {\r\n    setSelectedCoin(coin.label)\r\n  }\r\n\r\n  const handleChooseTransType = (trans) => {\r\n    setSelectedTransType(trans.value)\r\n  }\r\n\r\n  const handleAmountOfCoins = (event) => {\r\n    setAmountOfCoins(event.target.value)\r\n  }\r\n\r\n  const handleCostOfCoins = (event) => {\r\n    setCostOfCoins(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    submitButton.current.blur()\r\n    if (selectedCoin && selectedTransType && amountOfCoins && costOfCoins) {\r\n      console.log(selectedCoin + ' ' + selectedTransType + ' ' + amountOfCoins + ' ' + costOfCoins)\r\n      changeCoin(selectedCoin, selectedTransType, amountOfCoins, costOfCoins)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='p-4 col-span-1 row-span-1 bg-white rounded-xl shadow-xl flex flex-col align-center'>\r\n      <h2 className='text-2xl text-center font-bold mt-4'>Transactions</h2>\r\n      <h4 className='form-label'>Select a Coin:</h4>\r\n      <Select options={geckoCoins} onChange={handleChooseCoin} className='shadow-sm' />\r\n      <h4 className='form-label'>Was this a buy or a sell?:</h4>\r\n      <Select\r\n        options={[\r\n          { value: 'buy', label: 'Buy' },\r\n          { value: 'sell', label: 'Sell' },\r\n        ]}\r\n        onChange={handleChooseTransType}\r\n        className='shadow-sm'\r\n      />\r\n      <h4 className='form-label'>How many coins did you transact?</h4>\r\n      <input\r\n        type='number'\r\n        className='number-input'\r\n        value={amountOfCoins}\r\n        onChange={handleAmountOfCoins}\r\n        placeholder='Amount'\r\n      />\r\n      <h4 className='form-label'>Cost of each coin?</h4>\r\n      <input\r\n        type='number'\r\n        className='number-input'\r\n        value={costOfCoins}\r\n        onChange={handleCostOfCoins}\r\n        placeholder='Cost $'\r\n      />\r\n      <button ref={submitButton} onClick={handleSubmit} className='btn-blue'>\r\n        <p className='text-white'>Submit</p>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import Overview from './components/Overview'\nimport Transactions from './components/Transactions'\nimport React, { useState, useEffect } from 'react'\n\nconst App = () => {\n  const [coins, setCoins] = useState()\n\n  useEffect(() => {\n    let saved = JSON.parse(localStorage.getItem('coins'))\n    if (saved == null) {\n      localStorage.setItem('coins', JSON.stringify([]))\n      setCoins([])\n    } else {\n      setCoins(saved)\n    }\n  }, [])\n\n  const changeCoin = (coin_id, trans, amount, cost) => {\n    let editCoin = {}\n\n    amount = parseFloat(amount)\n    cost = parseFloat(cost)\n\n    let index = coins.findIndex((coin) => {\n      if (coin.id === coin_id) {\n        return true\n      } else {\n        return false\n      }\n    })\n\n    if (trans === 'buy') {\n      if (index === -1) {\n        editCoin.id = coin_id\n        editCoin.cost = cost\n        editCoin.amount = amount\n        editCoin.totalCost = cost * amount\n        editCoin.realizedGains = 0\n      } else {\n        editCoin = coins[index]\n        editCoin.totalCost = editCoin.totalCost + cost * amount\n        editCoin.amount = editCoin.amount + amount\n        editCoin.cost = editCoin.totalCost / editCoin.amount\n      }\n    } else if (trans === 'sell') {\n      if (index === -1) {\n        alert('Tried selling with no coins in list, Try again!')\n        return\n      } else {\n        editCoin = coins[index]\n        if (editCoin.amount - amount >= 0) {\n          editCoin.amount = editCoin.amount - amount\n          editCoin.realizedGains = editCoin.realizedGains + (amount * cost - amount * editCoin.cost)\n          if (editCoin.amount === 0) {\n            editCoin.totalCost = 0\n            editCoin.cost = 0\n          }\n        } else {\n          alert('You tried selling more coins than you have recorded! Try again!')\n          return\n        }\n      }\n    }\n\n    let newCoinList = coins\n\n    if (index !== -1) {\n      newCoinList[index] = editCoin\n    } else {\n      newCoinList.push(editCoin)\n    }\n\n    newCoinList = newCoinList.sort((a, b) => {\n      return b.totalCost - a.totalCost\n    })\n\n    setCoins([...newCoinList])\n    localStorage.setItem('coins', JSON.stringify(newCoinList))\n  }\n\n  return (\n    <div className='w-full h-full sm:h-screen bg-gray-100'>\n      <div className='container mx-auto py-6 sm:py-12 h-full'>\n        <div className='h-full px-4 sm:px-0 grid sm:grid-cols-3 sm:grid-rows-1 grid-cols-1 grid-rows-3 gap-4'>\n          <Overview coins={coins} />\n          <Transactions changeCoin={changeCoin} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}